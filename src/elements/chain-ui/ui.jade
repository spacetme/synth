
link(rel='import' href='../../components/core-dropdown/core-dropdown.html')
link(rel='import' href='../../components/core-menu-button/core-menu-button.html')

polymer-element(name='synth-hbox' noscript)
  template
    style: :scss
      @import "style";
      @include content {
        > :not(:first-child) {
          margin-left: 3px;
        }
        > :not(:last-child) {
          margin-right: 3px;
        }
      }
    content

polymer-element(name='synth-vbox' noscript)
  template
    style: :scss
      @import "style";
      @include content {
        > :not(:first-child) {
          margin-top: 3px;
        }
        > :not(:last-child) {
          margin-bottom: 3px;
        }
      }
    content

polymer-element(name='synth-item' attributes='title' noscript)
  template
    style: :scss
      @import "style";
      :host {
        display: flex;
        flex-direction: column;
      }
      :host > .title {
        text-align: center;
        color: #8b8685;
        margin-top: 1px;
        @include hint-text;
      }
    content
    .title {{title}}

polymer-element(name='chain-item' attributes='title index')
  template
    style: :scss
      @import "style";
      :host > .title {
        background: #555453 linear-gradient(to bottom, #8b8685, #555453);
        border: 1px solid #8b8685;
        border-radius: 4px 4px 0 0;
        padding: 2px 3px;
        core-menu-button {
          float: right;
          padding: 0 2px 0 10px;
        }
      }
      :host > .content {
        background: #151413 linear-gradient(to bottom, #252423, #151413);
        height: 108px;
        border: 1px solid #8b8685;
        border-top: 0;
        border-radius: 0 0 4px 4px;
        padding: 4px;
      }
    .title
      template(if='{{index != undefined}}')
        core-menu-button#dropdownButton
          &#x25BC;
          core-dropdown.chain-menu.dropdown(halign='right' relatedTarget='{{$.dropdownButton}}')
            synth-menu-item(on-click='{{_remove}}') Remove
            synth-menu-item(on-click='{{_duplicate}}') Duplicate
      {{title}}
    synth-hbox.content(layout horizontal): content
  script: :es6
    Polymer({
      _remove() {
        this.fire('unitremove', this.index)
      },
      _duplicate() {
        this.fire('unitduplicate', this.index)
      },
    })

polymer-element(name='synth-menu-item' noscript touch-action='none')
  template
    style: :scss
      :host {
        display: block;
        padding: 7px 10px;
        cursor: pointer;
      }
      :host(:hover) {
        background: #555453;
      }
    content

polymer-element(name='synth-adder' touch-action='none' attributes='units index last')
  style.
    body /deep/ .chain-menu--adder {
      transform: translate(0,32px);
    }
  template
    style: :scss
      :host {
        width: 36px;
        position: relative;
      }
      .arrow, .add {
        position: absolute;
        font-size: 24px;
        color: #656463;
        text-shadow: 2px 2px 0 #090807;
        text-align: center;
        top: 50%; left: 50%;
        transform: translate(-50%,-50%);
      }
      .add {
        opacity: 0;
        background: #151413;
        border: 1px solid #454443;
        width: 28px;
        height: 28px;
        line-height: 22px;
        cursor: pointer;
        &:hover {
          color: #e9e8e7;
          border-color: #e9e8e7;
          background: #8b8685;
        }
      }
      :host(:hover) {
        .add {
          opacity: 1;
        }
      }
    template(if='{{last}}')
      .arrow +
    template(if='{{!last}}')
      .arrow &rarr;
    .add#dropdownButton(on-click='{{_trigger}}') +
    core-dropdown.chain-menu.chain-menu--adder#dropdown(layered halign='right' relatedTarget='{{$.dropdownButton}}')
      template(repeat='{{unit in units}}')
        synth-menu-item(on-click='{{_addUnit}}' data-name='{{unit.name}}') {{unit.name}}
      template(if='{{!last && index > 0}}')
        hr
        synth-menu-item(on-click='{{_swap}}') Swap
  script: :es6
    Polymer({
      _trigger() {
        this.$.dropdown.toggle()
      },
      _addUnit(e, details, sender) {
        this.$.dropdown.toggle()
        this.fire('unitadd', { index: this.index, type: sender.dataset.name })
      },
      _swap() {
        this.$.dropdown.toggle()
        this.fire('unitswap', this.index)
      }
    })
